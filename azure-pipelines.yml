# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
- group: ExPerfWiz

pool:
  vmImage: windows-latest

steps:

- checkout: self
  clean: true
  persistCredentials: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      
        $psd1 = get-content experfwiz.psd1
        ($psd1 | select-string 'moduleversion*') -match '([0-9].[0-9].[0-9])'
        $Version = $Matches.1
        Write-Host $Version
        if ((git tag) -contains $version) { 
          write-host "Found Existing Version"
        }
        else { 
          write-host "New Version"
          git config --global user.name "AzureDevOps Agent"
          git tag $version
          git tag
          git push origin $version
      }

- task: DeleteFiles@1
  inputs:
    SourceFolder: 
    Contents: |
      *.yml
      .git
      .gitignore

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ExPerfWiz.zip'
    replaceExistingArchive: true

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_Canthv0'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/ExPerfWiz'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      
      Publish-Module -path '$(Build.ArtifactStagingDirectory)\Experfwiz' -nugetapikey $(PSGallery)